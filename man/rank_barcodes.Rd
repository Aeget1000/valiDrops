% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rank_barcodes.R
\name{rank_barcodes}
\alias{rank_barcodes}
\title{rank_barcodes}
\usage{
rank_barcodes(
  counts,
  type = "UMI",
  psi.min = 1,
  psi.max = 20,
  threshold = TRUE,
  plot = TRUE
)
}
\arguments{
\item{counts}{A matrix containing counts for all barcodes prior to any filtering.}

\item{type}{A string ("UMI" or "Genes"), which indicates which feature to use for ranking barcodes [default = "UMI"]. See details for more information.}

\item{psi.min}{A number indicating the lowest number of breakpoints to test when approximating the curve [default = 1]}

\item{psi.max}{A number indicating the highest number of breakpoints to test when approximating the curve [default = 20]}

\item{threshold}{A boolean (TRUE or FALSE), which indicates if the threshold to be included in the output [default = TRUE]}

\item{plot}{A boolean (TRUE or FALSE), which indicates if a plot should be returned [default = TRUE]}
}
\value{
A list or a data frame object that contains ranked barcodes and if chosen a threshold.
}
\description{
Function to rank barcodes according to the number of UMIs (or genes) and detect a cut-off point for putative cell- (or nuclei-) containing barcodes.
}
\details{
\strong{Choosing the type of feature to use for ranking of barcodes}\cr
In our experience, using the number of UMIs for barcode ranking is the best approach for most single-cell RNA-seq datasets. It generally performs well when the ambient RNA contamination is low to medium. For more contaminated datasets, it may be more robust to use the number of genes for barcode ranking. Generally, we suggest to test using the number of UMIs for barcode ranking first and visually inspect the plot If the threshold is not satisfactory, you may get better result using the number of genes for barcode ranking.

\strong{Parallel processing}\cr
This function is uses parallel processing through the foreach and doRNG packages. To use this functionality, the backend needs to be registered beforehand. This can be done by the user (using e.g. doFuture) or by the valiDrops wrapper. For more details, see \link{rank_barcodes}
}
